What is a React component?
    a) A JavaScript function that returns JSX ✅
    b) A built-in React class for creating elements
    c) A CSS file for styling React elements
    d) An HTML template used in React applications
Note :- In React, a component is essentially a JavaScript function (or a class) that returns JSX.

What is the role of the "children" prop in React components?
    a) It allows dynamic rendering of content within a component ✅
    b) It defines the child components of a parent component
    c) It provides access to the child components
    d) It represents the parent component's state
Note :- In React, the children prop is a special prop that allows you to pass components or elements as children to another component.

What is the "StrictMode" component in Reactlysed for?
    a) To ensure that components are rendered with high accuracy
    b) To identify and highlight potential problems in the application during development ✅
    c) To enable more secure communication between components
    d) To define strict rules for component rendering
Note :- React's StrictMode is a component that helps identify and highlight potential problems in your application during development.

What is the purpose of the "context" API in React?
    A) To define campotent rendering logic
    B) To handle Asynchrolous tasks in components
    C) To manage globst state and share data across components ✅
    D) To provide a way to create components
Note :- The Context API in React provides a way to share values, such as global state, across the component tree without having to explicitly pass props down manually at every level.

What is the purpose of the "defaultProps" property in React?
    a) It manages the component's lifecycle methods
    b) It sets up event listeners for the component
    c) It specifies default values for props if not provided ✅
    d) It defines the initial state of a component
Note :- In React, the defaultProps property allows you to define default values for props in a component. 
        If a prop is not provided when the component is used, React will use the default value specified in defaultProps.

What is the purpose of the forwardRef" function in React?
    a) To forward propertion a child to a parent component
    b) To pass refs from a parent component to a child component ✅
    c) To handle event propagation in the component tree
    d) To create a reference to a component's state
Note :- The forwardRef function in React allows components to pass refs received from a parent component down to a child component. 
        This is particularly useful when you need to access the underlying DOM element or instance of a child component from its parent.

What is the purpose of the render method in a React component?
    a) To update the component's state
    b) To define the structure of the component's UI ✅ 
    c) To initialize the component state
    d) To handle events in the component
Note :- In React, the render method is responsible for determining what gets displayed on the screen. 
        It returns a description of what the component should render, typically in the form of JSX (JavaScript XML), which defines the structure and content of the component's UI.

What is the "virtual DOM" in React?
    a) A simulated DOM for unit testing purposes
    b) A deprecated feature in React
    c) A lightweight representation of the actual DOM ✅
    d) An actual representation of the DOM structure
Note :- In React, the Virtual DOM is a lightweight, in-memory representation of the actual DOM. 
        React uses this virtual representation to perform efficient updates to the actual DOM. 
        When changes are made to the state or props of a component, React first updates the Virtual DOM, then compares it with the previous version to determine the minimal set of changes needed to update the actual DOM.

How can you prevent a component from rendering in React?
    a) By returning "eulf from the compatient's render method
    b) By collid prop on the component
    c)  By removing omeonent from the component tree ✅
    d) By seing the hidden CRS property
Note :- In React, you can prevent a component from rendering by simply removing it from the component tree. 
        This can be done by conditionally rendering the component based on certain conditions, or by not including it in the JSX markup at all. 
        Once a component is removed from the component tree, it won't be rendered in the output.

Which of the following is used to perform server-side rendering with React?
    a) ReactSSR
    b) ReactDOMServer ✅
    c) React Server
    d) React Router
Note :- ReactDOMServer is a package provided by React that includes methods for rendering React components on the server. 
        It allows you to perform server-side rendering (SSR) with React, where React components are rendered on the server and the resulting HTML is sent to the client.


What is the purpose of the "render prop" pattern in React?
    a) To pastinction as a prop to share code
    b) To optimize rendatang performance
    c) To render components conditionally
    d) to define component rendering logic ✅
Note :- The "render prop" pattern in React involves passing a function as a prop to a component. 
        This function provides the component with the necessary data or behavior to render its content.

What is the purpose of the "ErrorBoundary" component in React?
    a) To catch and handle errors during component rendering ✅
    b) To create a virtual boundary between different components
    c) To restrict access to certain components based on user roles
    d) To define custom error messages for components
Note :- In React, an ErrorBoundary component is used to catch JavaScript errors that occur during the rendering of a component tree below it in the hierarchy. 
        It allows you to gracefully handle errors, preventing the entire application from crashing due to an error in a single component.

How can you pass data from a child component to a parent component in React?
    a) By using the parentData object
    b) By using a sphten API
    c) By using the stars Object
    d) By using the props object ✅
Note:- In React, data is typically passed from a parent component to a child component via props. 
       However, to pass data from a child component to a parent component, you generally use a callback function that is passed down from the parent component to the child component as a prop. 

What is the purpose of the "React.Fragment" component in React?
    a) To create a new root element for the component tree
    b) To define a virtual DOM for performance optimization
    c) To group multiple elements without introducing a new DOM node ✅
    d) To enable CSS-in-JS styling for components
Note:- In React, the React.Fragment component, often abbreviated as <>...</>, or <React.Fragment>...</React.Fragment>, is used as a wrapper to group multiple elements together without adding an extra DOM node. 
       This is useful when you want to return multiple elements from a component's render method without introducing additional elements into the DOM structure.

In React what is the significance of the "displayName" property?
    a) it delines the use of the HTML tag used for rendering the component
    b) It determines the order of rendering components in the component tree
    c) It is used to provide a more descriptive name for components in debug tools ✅
    d) It specifies the class name for styling the component
Note:- The displayName property in React is used primarily for debugging purposes. 
       When you set the displayName property for a component, it provides a more descriptive name in React developer tools, making it easier to identify components during debugging and inspection. 
       This property doesn't affect the component's functionality but is useful for improving the readability and maintainability of your codebase during development.

What is the purpose of the "useContext" hook in React?
    a) To optimize component rendering using memoization
    b) To share data and state across components without prop drilling ✅
    c) To handle context switching between components
    d) To manage asynchronous tasks in functional components
Note:- The useContext hook in React is used to consume context within functional components. 
       It allows components to access data and state provided by a context provider higher up in the component tree, without having to pass props through each intermediate component (prop drilling).

How can you conditionally render a component in React based on a certain condition?
    a) By using ternary operators or logical "&&" operators within the JSX ✅
    b) By using the swift atement within the JSX
    c) By using the phidere function from React library
    d) By using the if-else statements within the USK
Note:- In React, you can conditionally render a component based on a certain condition by using ternary operators or logical "&&" operators within the JSX. 
       This allows you to dynamically determine whether a component should be rendered or not based on the result of the condition.
Example :-
        {condition ? <Component /> : null}
        {condition && <Component />}

What is the "React Router" used for in a React application?
    a) To manage routing and navigation between components ✅
    b) To manage component rendering in the application
    c) To create routes for server-side rendering
    d) To handle asynchronous tasks using routing logic
Note:- React Router is a popular library used in React applications for managing the routing and navigation between different components. 
       It allows developers to define routes in the application, mapping URLs to specific components to render when the URL matches a certain pattern. 
       React Router provides a declarative way to handle navigation within a single-page application, enabling users to move between different views without requiring a full page reload.

In React, what is the purpose of the "memoization" technique?
    a) To manage asynchronous tasks in components
    b) To optimige rendering by preventing unnecessary re-renders ✅
    c) To modiyabe jitpanel state of components
Note:- Memoization in React is a technique used to optimize rendering performance by preventing unnecessary re-renders of components. 

What is the purpose of the "PropTypes" library in React?
    a) To define the shape and types of props that a component should receive ✅
    b) To handle asynchronous tasks in components
    c) To define the type of components used in a React application
    d) To create custom data types for component rendering
Note:- PropTypes is a library in React used to define the types of props that a component should receive. 
       It allows you to specify the expected types for each prop, as well as whether a prop is required or optional. 
       By defining propTypes for your components, you can catch bugs early and provide clear documentation for how your components should be used. 
       If an invalid prop type is provided during development, React will generate a warning in the console.

What is the role of the "useLayoutEffect" hook in React?
    a) To create new components in a layout
    b) To create nen opmponents in layout
    c) To handia anywtrdous tasks with layout calculations
    d) To synchronize state changes with component rendering ✅
Note:- The useLayoutEffect hook in React is used to perform side effects in a component that depend on its rendered output or layout. 
       It is very similar to the useEffect hook, but it fires synchronously after all DOM mutations. 
       This makes it useful for tasks such as measuring DOM elements or synchronizing state changes with component rendering, ensuring that any updates to the DOM are reflected before the browser paints the screen.

What is the purpose of the "getDerivedStateFromProps" static method in React?
    a) To fetch data from Apis before rendering a component
    b) To modify the components internal state directly
    c) To compute derived state based on props changes ✅ 
    d) To update the components state after rendering
Note :- The getDerivedStateFromProps static method is used in React to compute and return a new state object based on changes in props. 
        It's a lifecycle method that is invoked right before rendering when new props or state are received, and it allows components to update their internal state based on the new prop values. 
        This method is primarily used when the new state depends on changes in the props, enabling the component to derive its internal state from the incoming props.

Which lifecycle method is called when a component is first added to the DOM?

    a) componentWillMount
    b) render
    c) componentDidMount ✅
    d) constructor
Note:- The componentDidMount lifecycle method is called after a component has been added to the DOM for the first time. 
       It is commonly used to perform actions that require DOM nodes or measurements to be available, such as fetching data from an API or initializing third-party libraries.

How can you pass props to a component in React?
    a) By using the props attribute in the component's JSX tag ✅
    b) By directly modifying the props object
    c) By using the this props object in the component
    d) By using the setState method

<MyComponent name="John" age={30} />
       
Note:- In this example, the name and age props are passed to the MyComponent component. 
       Inside the MyComponent, you can access these props using this.props.name and this.props.age if it's a class component, or props.name and props.age if it's a functional component.
 

What is the React state?
    a) A method for handling routing in React
    b) A way to define component structure
    c) A global state shared among all components
    d) A local state specific to a component ✅

How do you initialize state in a class component?
    a) By using the this.state = {} syntax in the constructor ✅
    b) By using the this setState(()) method
    c) By using the getinitialState method
    d) By passing props to the component

How can you update state in React?
    a) By passing props to the component
    b) By using the this.setState({}) method ✅
    c) By directly modifying the state object
    d) By using the this.state = {} syntax in the component
Note :- In React, state should not be modified directly. 
        Instead, you use the setState() method provided by React to update the state of a component. 
        This method takes an object as an argument, representing the updated state values, and merges it with the current state. 
        React then re-renders the component with the updated state. 

What happens if you try to update props directly in a component?
    a) The component re-readers with the updated props
    b) React throws an error
    c) The component's state is updated
    d) Nothing happens, props are immutable ✅
Note :- In React, props are immutable, which means they cannot be modified directly within a component. 
        Attempting to update props directly within a component will not have any effect. 
        React components receive props from their parent components and treat them as read-only.

What is the purpose of the children's prop in React?
    a) To pass content to a component between its opening and closing tags ✅
    b) To define the structure of a component's UI
    c) To handle events in a component
    d) To access the child components of a component
Note :- In React, the children prop is a special prop that allows you to pass components, elements, or plain text as children to another component. 
        This enables dynamic rendering of content within a component, as it allows you to define the structure of the component's output within its parent component. 
        The content passed as children will be accessible within the component via props.children .

What is the purpose of the constructor in a React component?
    a) To define the component's state ✅
    b) To initialize the component's props
    c) To define the component's structure
    d) To handle events in the component
Note:- In a React component, the constructor is used to initialize the component's state and to bind event handlers if necessary. 
       The constructor is a special method that gets called when a new instance of the component is created.

How do you bind event handlers in React class components?
    a) By using the bind method in the constructor ✅
    b) By passing props to the component
    c) By using the addEventListener method
    d) By using arrow functions in the JSX
Note:- In React class components, event handlers need to be bound to the component instance to ensure that this refers to the correct context when the handler is called. 
       This is typically done in the constructor using the bind method. 
       By binding the event handler in the constructor, you ensure that this.
       handleClick will always refer to the correct instance of the component when it is called.
       Alternatively, you can use arrow functions in the JSX, which automatically bind this to the component instance.

How can you prevent default behaviour in a React event handler?
    a) By using the preventDefault prop in the JSX
    b) By using the e.preventDefault() method ✅ 
    c) By using the e.stopPropagation() method
    d) By returning false from the event handler

What is the purpose of the setState method in React event handlers?
    a) To prevent default behavior
    b) To update the component's state ✅
    c) To handle component rendering
    d) To access the event object
Note:- In React, the setState() method is used to update the state of a component. 
       When called within an event handler, it triggers a re-render of the component with the updated state. 

What is the difference between synthetic events in React and native events in the DOM?
    a) Synthetic events cannot be used to handle form submissions
    b) Synthetic events do not bubble up the DOM tree
    c) Synthetic events are instances of React's Event class, while native events are native browser events ✅
    d) Synthetic events are faster than native events
Note:- In React, synthetic events are a wrapper around native browser events. 
       They are created by React to provide a consistent cross-browser interface for handling events. 
       Synthetic events are instances of React's Event class, which means they behave similarly across different browsers and provide additional features and optimizations. 
       On the other hand, native events are events that are directly emitted by the browser and are not modified or wrapped by React.

What is the purpose of the ref attribute in React?
    a) To define the structure of a component's Ut
    b) To update the component's state
    c) To access the DOM node of React element created by a component ✅
    d) To handle events in a component

How do you create a ref in a class component in React?
    a) By using the getRef method
    b) By using the this.refs property
    c) By using the createRef method ✅
    d) By using the ref attribute in the JSX
Note:- In a class component in React, you create a ref using the createRef() method, which is available on the React object. 
       This method returns a ref object, which can then be attached to a React element using the ref attribute.

